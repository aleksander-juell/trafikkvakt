// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Parent {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String?
  children  Child[]
  duties    Duty[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Child {
  id       String @id @default(cuid())
  name     String
  grade    String
  parentId String
  parent   Parent @relation(fields: [parentId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Crossing {
  id          String @id @default(cuid())
  name        String
  location    String
  description String?
  duties      Duty[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Week {
  id        String   @id @default(cuid())
  year      Int
  weekNumber Int
  startDate DateTime
  endDate   DateTime
  duties    Duty[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([year, weekNumber])
}

model Duty {
  id         String    @id @default(cuid())
  crossingId String
  crossing   Crossing  @relation(fields: [crossingId], references: [id], onDelete: Cascade)
  parentId   String?
  parent     Parent?   @relation(fields: [parentId], references: [id], onDelete: SetNull)
  weekId     String
  week       Week      @relation(fields: [weekId], references: [id], onDelete: Cascade)
  dayOfWeek  Int       // 1 = Monday, 2 = Tuesday, ..., 5 = Friday
  timeSlot   String    // e.g., "morning" or "afternoon"
  status     String    @default("assigned") // assigned, swapped, vacant
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([crossingId, weekId, dayOfWeek, timeSlot])
}

model DutySwap {
  id            String   @id @default(cuid())
  fromDutyId    String
  toDutyId      String
  fromParentId  String
  toParentId    String
  status        String   @default("pending") // pending, approved, rejected
  requestedAt   DateTime @default(now())
  resolvedAt    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}